/** @format */

const {{tag}}_schema = `#graphql

  directive @auth on FIELD_DEFINITION
  directive @userType(requires: [UserType]) on FIELD_DEFINITION

  scalar Upload
  scalar JSON

    type Query {
    {{#each queries}}
    {{this.name}}(
      {{#each this.arguments}}
      {{this.name}}: {{this.type}}{{#if this.required}}!{{/if}}{{#unless @last}}, {{/unless}}
      {{/each}}
    ): {{this.responseType}}
    {{/each}}
  }

  type Mutation {
    {{#each mutations}}
    {{this.name}}(
      {{#each this.arguments}}
      {{this.name}}: {{this.type}}{{#if this.required}}!{{/if}}, 
      {{/each}}
      {{#if this.inputType}}
      input: {{this.inputType}}{{#if this.required}}!{{/if}}
      {{/if}}
    ): {{this.responseType}}
    {{/each}}
  }

  {{#each types}}
    {{#if this.aliasFor}}
  {{#if (eq this.kind "input")}}
  input {{this.name}} = {{this.aliasFor}}
  {{else}}
  type {{this.name}} = {{this.aliasFor}}
  {{/if}}
    {{else}}
  {{#if (eq this.kind "input")}}
  input {{this.name}} {
      {{#each this.fields}}
    {{this.name}}: {{this.type}}{{#if this.required}}!{{/if}}
      {{/each}}
  }
  {{else}}
  type {{this.name}} {
      {{#each this.fields}}
    {{this.name}}: {{this.type}}{{#if this.required}}!{{/if}}
      {{/each}}
  }
  {{/if}}
    {{/if}}
  {{/each}}
  
`;

export default {{tag}}_schema;
